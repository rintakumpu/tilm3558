}
cor.mtest(pankkiotos_pca, 0.95)
cor.mtest <- function(mat, conf.level = 0.95) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat <- lowCI.mat <- uppCI.mat <- sig.mat <- matrix(NA, n, n)
diag(p.mat) <- 0
diag(lowCI.mat) <- diag(uppCI.mat) <- 1
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], conf.level = conf.level)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
lowCI.mat[i, j] <- lowCI.mat[j, i] <- tmp$conf.int[1]
uppCI.mat[i, j] <- uppCI.mat[j, i] <- tmp$conf.int[2]
if(tmp$conf.int[1]<=0 & tmp$conf.int[2]>=0) {
sig.mat[i,j] <- sig.mat[j,i] <- FALSE
} else { sig.mat[i,j] <- sig.mat[j,i] <- TRUE }
}
}
cor.mtest <- function(mat, conf.level = 0.95) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat <- lowCI.mat <- uppCI.mat <- sig.mat <- matrix(NA, n, n)
diag(p.mat) <- 0
diag(lowCI.mat) <- diag(uppCI.mat) <- 1
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], conf.level = conf.level)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
lowCI.mat[i, j] <- lowCI.mat[j, i] <- tmp$conf.int[1]
uppCI.mat[i, j] <- uppCI.mat[j, i] <- tmp$conf.int[2]
# Kuuluuko nolla luottamusvälille?
if(tmp$conf.int[1]<=0 & tmp$conf.int[2]>=0) {
sig.mat[i,j] <- sig.mat[j,i] <- FALSE
} else { sig.mat[i,j] <- sig.mat[j,i] <- TRUE }
}
}
# return(list(p.mat, lowCI.mat, uppCI.mat))
return(sig.mat)
}
cor.mtest(pankkiotos_pca, 0.95)
cor.mtest(pankkiotos_pca, 0.95)[[1]]
korrelaatiot<-cor.mtest(pankkiotos_pca, 0.95)
korrelaatiot
cor.mtest <- function(mat, conf.level = 0.95) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat <- lowCI.mat <- uppCI.mat <- sig.mat <- matrix(NA, n, n)
diag(p.mat) <- 0
diag(lowCI.mat) <- diag(uppCI.mat) <- 1
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], conf.level = conf.level)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
lowCI.mat[i, j] <- lowCI.mat[j, i] <- tmp$conf.int[1]
uppCI.mat[i, j] <- uppCI.mat[j, i] <- tmp$conf.int[2]
# Kuuluuko nolla luottamusvälille?
if(tmp$conf.int[1]<=0 & tmp$conf.int[2]>=0) {
sig.mat[i,j] <- sig.mat[j,i] <- "FALSE"
} else { sig.mat[i,j] <- sig.mat[j,i] <- "TRUE" }
}
}
# return(list(p.mat, lowCI.mat, uppCI.mat))
return(sig.mat)
}
korrelaatiot<-cor.mtest(pankkiotos_pca, 0.95)
korrelaatiot
length(korrelaatiot)
)
cor.mtest <- function(mat, conf.level = 0.95) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat <- lowCI.mat <- uppCI.mat <- sig.mat <- matrix(NA, n, n)
diag(p.mat) <- 0
diag(lowCI.mat) <- diag(uppCI.mat) <- 1
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], conf.level = conf.level)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
lowCI.mat[i, j] <- lowCI.mat[j, i] <- tmp$conf.int[1]
uppCI.mat[i, j] <- uppCI.mat[j, i] <- tmp$conf.int[2]
# Kuuluuko nolla luottamusvälille?
if(tmp$conf.int[1]<=0 & tmp$conf.int[2]>=0) {
sig.mat[i,j] <- sig.mat[j,i] <- "FALSE"
} else { sig.mat[i,j] <- sig.mat[j,i] <- "TRUE" }
}
}
# return(list(p.mat, lowCI.mat, uppCI.mat))
return(sig.mat)
}
korrelaatiot<-cor.mtest(pankkiotos_pca, 0.95)
korrelaatiot
cor.mtest <- function(mat, conf.level = 0.95) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat <- lowCI.mat <- uppCI.mat <- sig.mat <- matrix(NA, n, n)
diag(p.mat) <- 0
diag(lowCI.mat) <- diag(uppCI.mat) <- 1
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], conf.level = conf.level)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
lowCI.mat[i, j] <- lowCI.mat[j, i] <- tmp$conf.int[1]
uppCI.mat[i, j] <- uppCI.mat[j, i] <- tmp$conf.int[2]
# Kuuluuko nolla luottamusvälille?
if(tmp$conf.int[1]<=0 & tmp$conf.int[2]>=0) {
sig.mat[i,j] <- sig.mat[j,i] <- FALSE
} else { sig.mat[i,j] <- sig.mat[j,i] <- TRUE }
}
}
# return(list(p.mat, lowCI.mat, uppCI.mat))
return(sig.mat)
}
korrelaatiot<-cor.mtest(pankkiotos_pca, 0.95)
korrelaatiot
sum(korrelaatiot)
sum(unlist(korrelaatiot))
unlist(korrelaatiot)
?sum
sum(unlist(korrelaatiot), na.rm=TRUE)
korrelaatiot_p005<-cor.mtest(pankkiotos_pca, 0.95)
sum(unlist(korrelaatiot), na.rm=TRUE)
length(unlist(korrelaatiot))
korrelaatiot_p005<-cor.mtest(pankkiotos_pca, 0.95)
sum(unlist(korrelaatiot_p005), na.rm=TRUE) # 816 / 1681 => Puolet korrelaatioista merkitseviä
korrelaatiot_p01<-cor.mtest(pankkiotos_pca, 0.90)
sum(unlist(korrelaatiot_p01), na.rm=TRUE) # 816 / 1681 => Puolet korrelaatioista merkitseviä
1681/014
1681/914
914/1681
816/1681
?KMO
lapply(c("psych"), lataa_kirjasto)
?corrplot
?RKO
?KMO
KMO(pankkiotos_pca)
?diag
typeof(KMO(pankkiotos_pca))
KMO(pankkiotos_pca[[1]])
KMO(pankkiotos_pca)[[1]]
KMO(pankkiotos_pca)[[2]]
names(KMO(pankkiotos_pca))
KMO(pankkiotos_pca)[[3]]
KMO(pankkiotos_pca)[[4]]
KMO(pankkiotos_pca)[[5]]
KMO(pankkiotos_pca)[[1]]
KMO(pankkiotos_pca)[[1]]
?KMO
cortest.bartlett(pankkiotos_pca)
?cortest.bartlett
cortest.bartlett(pankkiotos_pca,1000)
cortest.bartlett(pankkiotos_pca,45)
korrelaatiot<-cor.mtest(pankkiotos_pca, 0)
sum(unlist(korrelaatiot), na.rm=TRUE)
41*41
816/1640
914/1640
?shapiro.wilk
?shapiro.test
shapiro.test(pankkiotos_pca[,1])
shapiro.test(pankkiotos_pca[,2])
shapiro.test(pankkiotos_pca[,3])
pankkiotos[,42]
pankkiotos[,43]
pankkiotos[42,]
pankkiotos_pca[,42]
pankkiotos_pca[,41]
shapiro.test(pankkiotos_pca[,41])
shapiro.test(pankkiotos_pca[,40])
shapiro.test(pankkiotos_pca[,39])
shapiro.test(pankkiotos_pca[,38])
?random
?rand
shapiro.test(pankkiotos_pca[,sample(1:41,1)])
shapiro.test(pankkiotos_pca[,sample(1:41,1)]) # W = 0.2719, p-value < 2.2e-16
shapiro.test(pankkiotos_pca[,sample(1:41,1)]) # W = 0.0923, p-value < 2.2e-16
?pca
# Ladataan/asennetaan käytetyt kirjastot
lapply(c("psych", "corrplot", "princomp"), lataa_kirjasto)
?princomp
?principal
malli_pca <- principal(pankkiotos_pca, rotate="promax")
malli_pca
malli_pca <- principal(pankkiotos_pca, nfactors=3, rotate="promax")
malli_pca
round(cor(pankkiotos_pca),2)
typeof(round(cor(pankkiotos_pca),2))
korrelaatiot<-round(cor(pankkiotos_pca),2)
korrelaatiot[1,1]
korrelaatiot[1,]
korrelaatiot[42,]
korrelaatiot[41,]
korrelaatiot[2,]
korrelaatiot[3,]
korrelaatiot[4,]
korrelaatiot[5,]
korrelaatiot[6,]
korrelaatiot[7,]
korrelaatiot[8,]
korrelaatiot[5,]
korrelaatiot[9,]
korrelaatiot[10,]
korrelaatiot[11,]
korrelaatiot[5,]
korrelaatiot[10,]
korrelaatiot[11,]
korrelaatiot[12,]
korrelaatiot[13,]
korrelaatiot[14,]
korrelaatiot[15,]
korrelaatiot[16,]
korrelaatiot[17,]
korrelaatiot[18,]
korrelaatiot[19,]
korrelaatiot[20,]
korrelaatiot[21,]
korrelaatiot[22,]
korrelaatiot[23,]
korrelaatiot[24,]
korrelaatiot[25,]
korrelaatiot[26,]
korrelaatiot[27,]
korrelaatiot[28,]
korrelaatiot[29,]
korrelaatiot[30,]
korrelaatiot[31,]
korrelaatiot[32,]
korrelaatiot[33,]
korrelaatiot[34,]
korrelaatiot[35,]
korrelaatiot[36,]
korrelaatiot[37,]
korrelaatiot[36,]
korrelaatiot[38,]
korrelaatiot[39,]
korrelaatiot[40,]
korrelaatiot[41,]
pankkiotos_pca
pankkiotos_pca[1,]
names(pankkiotos_pca)
pudotettavat <- c("asuntolaina_b_kpl_luok", "vakuutus_b_luok", "vakuutus_c_luok", "kayttotili_vel_luok",  "asuntolaina_d_kpl_luok", "asuntolaina_e_kpl_luok", "toimeksianto_a_kpl_luok", "toimeksianto_b_kpl_luok")
pankkiotos_pca_edit <- pankkiotos_pca[,!(names(pankkiotos_pca_edit) %in% pudotettavat)]
pankkiotos_pca_edit <- pankkiotos_pca[,!(names(pankkiotos_pca) %in% pudotettavat)]
dim(pankkiotos_pca_edit)
KMO(pankkiotos_pca_edit)[[1]] # 0.7033783 > 0.6
shapiro.test(pankkiotos_pca_edit[,sample(1:33,1)]) # W = 0.2719, p-value < 2.2e-16
shapiro.test(pankkiotos_pca_edit[,sample(1:33,1)]) # W = 0.0923, p-value < 2.2e-16
shapiro.test(pankkiotos_pca_edit[,sample(1:33,1)]) # W = 0.3281, p-value < 2.2e-16
?parallel
ominaisarvot <- eigen(cor(pankkiotos_pca_edit)) # Haetaan ominaisarvot
ap <- parallel(subject=nrow(pankkiotos_pca_edit),var=ncol(pankkiotos_pca_edit),
rep=100,cent=.05)
?parallelplot
ap <- parallelplot(subject=nrow(pankkiotos_pca_edit),var=ncol(pankkiotos_pca_edit),
rep=100,cent=.05)
lapply(c("psych", "corrplot", "nFactors"), lataa_kirjasto)
?parallel
ominaisarvot <- eigen(cor(pankkiotos_pca_edit)) # Haetaan ominaisarvot
ap <- parallel(subject=nrow(pankkiotos_pca_edit),var=ncol(pankkiotos_pca_edit),
rep=100,cent=.05)
nS <- nScree(x=ominaisarvot$values, aparallel=ap$eigen$qevpea)
plotnScree(nS)
ns
nS
?nScree
malli_pca <- principal(pankkiotos_pca, nfactors=9, rotate="promax")
malli_pca
malli_pca <- principal(pankkiotos_pca, nfactors=8, rotate="promax")
malli_pca
malli_pca <- principal(pankkiotos_pca, nfactors=7, rotate="promax")
malli_pca
malli_pca <- principal(pankkiotos_pca, nfactors=3, rotate="promax")
malli_pca
malli_pca <- principal(pankkiotos_pca, nfactors=4, rotate="promax")
malli_pca
malli_pca <- principal(pankkiotos_pca, nfactors=5, rotate="promax")
malli_pca
malli_pca <- principal(pankkiotos_pca, nfactors=6, rotate="promax")
malli_pca
malli_pca <- principal(pankkiotos_pca, nfactors=7, rotate="promax")
malli_pca
malli_pca <- principal(pankkiotos_pca, nfactors=9, rotate="promax")
malli_pca
malli_pca.communality
malli_pca$communality
?principal
malli_pca$values
malli_pca$R2
malli_pca$communality
as.matrix(malli_pca$communality)
malli_pca <- principal(pankkiotos_pca, nfactors=10, rotate="promax")
malli_pca
malli_pca <- fa(pankkiotos_pca, nfactors=10, rotate="promax")
malli_pca <- fa(pankkiotos_pca, nfactors=9, rotate="promax")
malli_pca
malli_pca$fit
malli_pca$values
?fa
malli_pca <-principal(pankkiotos_pca, nfactors=9, rotate="promax")
malli_pca$values
prop.table(malli_pca$values)
malli_pca <-principal(pankkiotos_pca, nfactors=9, rotate="promax")
?principal
sum(prop.table(malli_pca$values))
?principal
malli_pca$fir
malli_pca$fit
malli_pca <-principal(pankkiotos_pca, nfactors=8, rotate="promax")
malli_pca$fit
malli_pca <-principal(pankkiotos_pca, nfactors=10, rotate="promax")
malli_pca$fit
malli_pca$values
prop.table(malli_pca$values)
prop.table(malli_pca$loadings)
malli_pca$loadings
malli_pca <-principal(pankkiotos_pca, nfactors=9, rotate="promax")
malli_pca$fit
malli_pca$fit.off
malli_pca$fit
ominaisarvot
?eigen
nScree(x=ominaisarvot$values, aparallel=ap$eigen$qevpea)
?nScree
summary(malli_pca)
?principal
malli_pca$values
prop.table(malli_pca$values)
sum(prop.table(malli_pca$values))
malli_pca <- principal(pankkiotos_pca, nfactors=2, rotate="promax")
prop.table(malli_pca$values)
sum(prop.table(malli_pca$values))
summary(malli_pca)
summary(malli_pca$values)
malli_pca$values
ominaisarvot <- eigen(cor(pankkiotos_pca_edit)) # Haetaan ominaisarvot
ap <- parallel(subject=nrow(pankkiotos_pca_edit),var=ncol(pankkiotos_pca_edit),
rep=100,cent=.05)
nScree(x=ominaisarvot$values, aparallel=ap$eigen$qevpea)
?screeplot
screeplot(pankkiotos_pca_edit)
?prcomp
screeplot(prcomp(pankkiotos_pca_edit))
dev.off()
screeplot(prcomp(pankkiotos_pca_edit))
screeplot(prcomp(pankkiotos_pca_edit), ncp=10)
fviz_screeplot
malli_pca <-principal(pankkiotos_pca, nfactors=9, rotate="promax")
summary(malli_pca)
?princomp
malli_pca <- princomp(pankkiotos_pca, nfactors=2, rotate="promax")
malli_pca <- princomp(pankkiotos_pca, nfactors=2, rotate="promax", muu="zet")
malli_pca <- princomp(pankkiotos_pca, nfactors=2, rotate="promax")
summary(malli_pca)
dim(pankkiotos_pca)
malli_pca <- princomp(pankkiotos_pca[,1:41])
summary(malli_pca))
summary(malli_pca)
cumsum(malli_pca[["sdev"]]^2)/sum(malli_pca[["sdev"]]^2)
malli_pca
malli_pca <-principal(pankkiotos_pca, nfactors=41, rotate="promax")
summary(malli_pca)
?principal
screeplot
screeplot(malli_pca$values)
screeplot(malli_pca$values)
malli_pca$values
?princomp
?principal
?prcomp
lapply(c("psych", "corrplot", "nFactors", "FactoMineR"), lataa_kirjasto)
?PCA
malli_pca <-PCA(pankkiotos_pca_edit, ncp=9)
?screeplot
screeplot(malli_pca)
?screeplot
malli_pca <-princomp(pankkiotos_pca_edit)
screeplot(malli_pca)
?screeplot
malli_pca <-principal(pankkiotos_pca, nfactors=41, rotate="promax")
?principal
malli_pca
malli_pca$values
screeplot(malli_pca$values)
screeplot(malli_pca[[values]])
malli_pca <-principal(pankkiotos_pca_edit, nfactors=11, rotate="promax")
malli_pca$values
malli_pca <-principal(pankkiotos_pca_edit, nfactors=11, rotate="promax")
malli_pca$values
prop.table(malli_pca$values)
?screeplot
?principal
nfactors(pankkiotos_pca_edit, n=20, rotate="promax", fm="pc")
lapply(c("psych", "corrplot", "nFactors", "FPArotation"), lataa_kirjasto)
lapply(c("psych", "corrplot", "nFactors", "GPArotation"), lataa_kirjasto)
nfactors(pankkiotos_pca_edit, n=20, rotate="promax", fm="pc")
?nfactors
komponenttien_maara <- nfactors(pankkiotos_pca_edit, n=20, rotate="promax", fm="pc")
komponenttien_maara$RMSEA
komponenttien_maara
komponenttien_maara <- VSS(pankkiotos_pca_edit, n=20, rotate="promax", fm="pc")
pdf('pankkiotos_vss.pdf')
dev.off()
komponenttien_maara$RMSEA
?VSS
typeof(komponenttien_maara)
komponenttien_maara
komponenttien_maara <- VSS(pankkiotos_pca_edit, n=20, rotate="promax", fm="pc", diagonal=TRUE)
komponenttien_maara
komponenttien_maara[,1:8]
as.data.frame(komponenttien_maara)
as.matrix(komponenttien_maara)
unlist(komponenttien_maara)
as.data.frame(unlist(komponenttien_maara))
as.matrix(unlist(komponenttien_maara))
komponenttien_maara
komponenttien_maara <- VSS(pankkiotos_pca_edit, n=20, rotate="promax", fm="pc", diagonal=FALSE)
pdf('pankkiotos_vss.pdf')
dev.off()
komponenttien_maara
malli_pca <-principal(pankkiotos_pca, nfactors=7, rotate="promax")
malli_pca <-principal(pankkiotos_pca_edit, nfactors=7, rotate="promax")
summary(malli_pca)
malli_pca$values
malli_pca$loadings
pankkiotos_pca_edit2 <- pankkiotos_pca_edit[,!(names(pankkiotos_pca_edit) %in% c("rahasto_a1_luok"))]
dim(pankkiotos_pca_edit2)
malli_pca2 <-principal(pankkiotos_pca_edit2, nfactors=7, rotate="promax")
summary(malli_pca2)
malli_pca2$loadings
malli_pca2$communality
as.matrix(malli_pca2$communality)
# Alhaiset kommunaliteetit havaitaan seuraavissa muuttujissa:
malli_pca2$loadings
malli_pca2$fit
?principal
malli_pca2$scores
dim(malli_pca2$scores)
malli_pca2$loadings
?rotate
as.matrix(malli_pca2$loadings)
t(as.matrix(malli_pca2$loadings))
dim(as.matrix(malli_pca2$loadings))
as.matrix(malli_pca2$loadings)
t(as.matrix(malli_pca2$loadings))
as.matrix(malli_pca2$loadings)
pca_pistemaarat <- malli_pca2$scores
typeof(pca_pistemaarat)
pca_pistemaarat <- as.matrix(malli_pca2$scores)
?names
names(pca_pistemaarat) <- c("a1_kayttotili","a2_saastotili", "a3_rahasto", "a4_laina", "a5_osakkeet", "a6_vakuutus", "a7_tiski")
pca_pistemaarat
dim(pca_pistemaarat)
names(pca_pistemaarat)
names(pca_pistemaarat)
pca_pistemaarat <- as.matrix(malli_pca2$scores)
pca_pistemaarat
dim(pca_pistemaarat)
pca_pistemaarat[1,1]
pca_pistemaarat[1,]
pca_pistemaarat <- names(c("a1_kayttotili","a2_saastotili", "a3_rahasto", "a4_laina", "a5_osakkeet", "a6_vakuutus", "a7_tiski"))
pca_pistemaarat[1,]
pca_pistemaarat <- as.matrix(malli_pca2$scores)
pca_pistemaarat <- as.matrix(malli_pca2$scores)
pca_pistemaarat <- colnames(c("a1_kayttotili","a2_saastotili", "a3_rahasto", "a4_laina", "a5_osakkeet", "a6_vakuutus", "a7_tiski"), do.NULL = FALSE)
pca_pistemaara[1,]
pca_pistemaarat[1,]
pca_pistemaarat <- as.matrix(malli_pca2$scores)
colnames(c("a1_kayttotili","a2_saastotili", "a3_rahasto", "a4_laina", "a5_osakkeet", "a6_vakuutus", "a7_tiski"), do.NULL = FALSE)
pca_pistemaarat[1,]
colnames(pca_pistemaarat, c("a1_kayttotili","a2_saastotili", "a3_rahasto", "a4_laina", "a5_osakkeet", "a6_vakuutus", "a7_tiski"), do.NULL = FALSE)
colnames(pca_pistemaarat) <- c("a1_kayttotili","a2_saastotili", "a3_rahasto", "a4_laina", "a5_osakkeet", "a6_vakuutus", "a7_tiski")
pca_pistemaarat[1,]
pca_pistemaarat <- as.matrix(malli_pca2$scores)
# Tallennetaan pääkomponenttipistemäärät
pca_pistemaarat <- as.matrix(malli_pca2$scores)
# Nimetään uudet muuttujat asiakasryhmien mukaan
colnames(pca_pistemaarat) <- c("a1_kayttotili","a2_saastotili", "a3_rahasto", "a4_laina", "a5_osake", "a6_vakuutus", "a7_tiski")
pca_pistemaarat
pca_pistemaarat[1,]
plot(pca_pistemaarat[,1])
plot(pca_pistemaarat[,2])
shapiro.test(pca_pistemaarat[,1])
shapiro.test(pca_pistemaarat[,2])
shapiro.test(pca_pistemaarat[,3])
shapiro.test(pca_pistemaarat[,4])
shapiro.test(pca_pistemaarat[,5])
shapiro.test(pca_pistemaarat[,6])
shapiro.test(pca_pistemaarat[,7])
min(pca_pistemaarat[,1])
max(pca_pistemaarat[,1])
?mean
mean(c(a1_kayttotili,a2_saastotili))
mean(c(pca_pistemaarat[,1],pca_pistemaarat[,2]))
mean(c(pca_pistemaarat[,1],pca_pistemaarat[,2],pca_pistemaarat[,3]))
mean(c(pca_pistemaarat[,1],pca_pistemaarat[,2],pca_pistemaarat[,3],pca_pistemaarat[,4],pca_pistemaarat[,5],pca_pistemaarat[,6]))
colSUms(pca_pistemaarat)
colSums(pca_pistemaarat)
rowSums(pca_pistemaarat)
summamuuttuja <- rowSums(pca_pistemaarat)
plot(pca_pistemaarat[,1], summamuuttuja)
plot(pca_pistemaarat[,2], summamuuttuja)
plot(pca_pistemaarat[,3], summamuuttuja)
plot(pca_pistemaarat[,4], summamuuttuja)
plot(pca_pistemaarat[,5], summamuuttuja)
plot(pca_pistemaarat[,6], summamuuttuja)
plot(pca_pistemaarat[,7], summamuuttuja)
lapply(c("psych", "corrplot", "nFactors", "GPArotation", "rpud"), lataa_kirjasto)
hclust(pca_pistemaarat)
dist(pca_pistemaarat)
hclust(dist(pca_pistemaarat))
identify(hclust(dist(pca_pistemaarat)))
